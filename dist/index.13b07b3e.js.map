{"mappings":"AAAe,SAAAA,EAAsCC,EAAUC,EAAYC,GACzE,IAAKD,EAAWE,IAAIH,GAClB,MAAM,IAAII,UAAU,gBAAkBF,EAAS,kCAEjD,OAAOD,EAAWI,IAAIL,EACxB,CCLe,SAAAM,EAAkCN,EAAUO,GACzD,OAAIA,EAAWF,IACNE,EAAWF,IAAIG,KAAKR,GAEtBO,EAAWE,KACpB,CCFe,SAAAC,EAA+BV,EAAUC,GAEtD,OAAOK,EAAwBN,EADdD,EAA4BC,EAAUC,EAAY,OAErE,CCNe,SAAAU,EAAoCC,EAAKC,GACtD,GAAIA,EAAkBV,IAAIS,GACxB,MAAM,IAAIR,UAAU,iEAExB,CCFe,SAAAU,EAAgCF,EAAKX,EAAYQ,GAC9DE,EAA2BC,EAAKX,GAChCA,EAAWc,IAAIH,EAAKH,EACtB,CCLe,SAAAO,EAAgChB,EAAUiB,EAAYC,GACnE,IAAKD,EAAWd,IAAIH,GAClB,MAAM,IAAII,UAAU,kDAGtB,OAAOc,CACT,C,ICHEC,EAAA,IAAAC,QAMAC,EAAA,IAAAC,QAAA,SAAAC,EAAkBC,GAChB,MAAMC,EAAeD,EAAOE,OAAOC,QAAQ,mCAE3C,IAAIF,EAAc,OAElB,MAAMG,EAAiBH,EAAaI,cAAcC,mBAE5CC,EAA4D,SAA/CN,EAAaO,aAAa,mBAA+B,EAE5EP,EAAaQ,aAAa,gBAAiB,IAAIF,KAE5CA,GACDH,EAAeK,aAAa,SAAU,IACtCR,EAAaS,UAAUC,OAAO,4BAE9BP,EAAeQ,gBAAgB,UAC/BX,EAAaS,UAAUG,IAAI,0BAG/B,CAGF,IA7BA,MAGEC,cCHa,IAAiC1B,EAAKK,EACnDN,EAD8CC,EDO9C2B,KCPmDtB,EDOnDI,GCLAJ,EAAWoB,IAAIzB,GDDfE,EAAAyB,KAAApB,EAAA,C,kBAAaqB,SAASC,cAAc,4BAGlC/B,EAAA6B,KAAMpB,GAAUuB,iBAAiB,QAAA1B,EAASuB,KAAMlB,EAAAE,GAClD","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_private_method_get.mjs","src/js/accordion.js","node_modules/@swc/helpers/src/_class_private_method_init.mjs"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classPrivateMethodGet(receiver, privateSet, fn) {\n  if (!privateSet.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return fn;\n}\n","// I want to make use of event bubbling. \n\nclass AccordionComponent {\n  #accordion = document.querySelector(\"div[class='accordion']\"); \n\n  constructor () {\n    this.#accordion.addEventListener('click', this.#showPanelOnClick); \n  }\n\n  #showPanelOnClick(evtObj) {\n    const accordionBtn = evtObj.target.closest(\"button[class~='accordion__btn']\"); \n\n    if(!accordionBtn) return; \n\n    const accordionPanel = accordionBtn.parentElement.nextElementSibling; \n    \n    const isExpanded = accordionBtn.getAttribute('aria-expanded') === 'true' || false;\n\n    accordionBtn.setAttribute('aria-expanded', `${!isExpanded}`); \n\n    if(isExpanded) {\n      accordionPanel.setAttribute('hidden', ''); \n      accordionBtn.classList.remove('accordion__btn--active'); \n    } else {\n      accordionPanel.removeAttribute('hidden'); \n      accordionBtn.classList.add('accordion__btn--active'); \n    }\n   \n  }\n}\n\nnew AccordionComponent(); \n\n\n// Check out this link to see another variation of the accordion which I built --> https://codepen.io/TraversetheDOM/pen/jOvLxre\n\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateMethodInit(obj, privateSet) {\n  _checkPrivateRedeclaration(obj, privateSet);\n  privateSet.add(obj);\n}\n"],"names":["$63a2a9cb56255ced$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$91f06d233fb295cb$export$2e2bcd8739ae039","descriptor","call","value","$cfafd7bd727718cb$export$2e2bcd8739ae039","$3b30310a11d769ec$export$2e2bcd8739ae039","obj","privateCollection","$a33675d45e16a910$export$2e2bcd8739ae039","set","$dfaf0ab827dcf2c2$export$2e2bcd8739ae039","privateSet","fn","$1f144ad68bc411c7$var$_accordion","WeakMap","$1f144ad68bc411c7$var$_showPanelOnClick","WeakSet","$1f144ad68bc411c7$var$showPanelOnClick","evtObj","accordionBtn","target","closest","accordionPanel","parentElement","nextElementSibling","isExpanded","getAttribute","setAttribute","classList","remove","removeAttribute","add","constructor","this","document","querySelector","addEventListener"],"version":3,"file":"index.13b07b3e.js.map"}